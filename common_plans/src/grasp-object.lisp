(in-package :comp)
(defvar *dimensions*)
(defvar *pose*)

(defun grasp-object (object-id grasp-pose)
  (setq *dimensions* (llif:prolog-object-dimensions object-id))
  (setq *pose* (llif:prolog-object-pose object-id))
  
  (let ((px (nth 0 (nth 2 *pose*)))
        (py (nth 1 (nth 2 *pose*)))
        (pz (nth 2 (nth 2 *pose*)))
        (qv1 (nth 0 (nth 3 *pose*)))
        (qv2 (nth 1 (nth 3 *pose*)))
        (qv3 (nth 2 (nth 3 *pose*)))
        (qv4 (nth 3 (nth 3 *pose*)))
        (size_x (nth 0 *dimensions*))
        (size_y (nth 1 *dimensions*))
        (size_z (nth 2 *dimensions*)))
    (if (equalp grasp-pose 0)
        (llif:call-grasp-action px py pz qv1 qv2 qv3 qv4 size_x size_y size_z object-id 0))
    (if (equalp grasp-pose 1)
    (llif:call-grasp-action px py  pz qv1 qv2 qv3 qv4 size_x size_y size_z object-id 1)))
  )
