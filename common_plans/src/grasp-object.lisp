(in-package :comp)
(defvar *dimensions*)
(defvar *pose*)

(defun grasp-object (object-id grasp-pose)
  (setq *dimensions* (llif:prolog-object-dimensions object-id))
  (setq *pose* (llif:prolog-object-pose object-id))
  (let ((px (aref *pose* 0))
        (py (aref *pose* 1))
        (pz (aref *pose* 2))
        (size_x (aref *dimensions* 0))
        (size_y (aref *dimensions* 1))
        (size_z (aref *dimensions* 2)))
    (if (equalp grasp-pose 0)
        (llif:call-grasp-action px py (+ pz size_z) 0 0 0 0 size_x size_y size_z object-id 1))
    (if (equalp grasp-pose 1)
    (llif:call-grasp-action px py (+ pz (/ size_z 2)) 0 0 0 0 size_x size_y size_z object-id 1)))
  )
