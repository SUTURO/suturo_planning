(in-package :llif)


(defparameter *searchMap* Nil)

;;@author Philipp Klein
(defun init-search-map ()
  "subscribes to the dynamic_obstacle_map topic and call the callback function save-obstacle-map"
  (subscribe "map" "nav_msgs/OccupancyGrid" #'save-init-map))

;;@author Philipp Klein
(defun save-init-map (mapMsg)
  "saves the given msg in the searchMap parameter
  `mapMsg' the message to be saved"
  (if (not *searchMap*)
      (roslisp:ros-info (poi-search) "Map initialised")
      (defparameter *searchMap* (roslisp:modify-message-copy mapMsg))))

;;@author Philipp Klein
(defun robot-in-obstacle-stamped (point)
  "wrappen for the robot-in-obstacle function to use a stamped pose
  `point' the position on the map"
  (robot-in-obstacle (cl-tf::origin point)))

;;@author Philipp Klein
(defun robot-in-obstacle (point)
  "returns if the obstacle value for the given point is lower then 66
  `point' the position on the map"
  (circle-is-in-obstacle point))

;;@author Philipp Klein
(defun circle-is-in-obstacle (point)
  "returns if the obstacle value for the given point is lower then 66
  `point' the position on the map"
  (< (get-map-point point) 66 ))




